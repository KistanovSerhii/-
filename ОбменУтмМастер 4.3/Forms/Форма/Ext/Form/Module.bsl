
&НаСервере
Процедура ЗагрузитьСправочникиОрганизацииНаСервере(ФайлАдрес)
	пОбъект = РеквизитФормыВЗначение("Объект");
	пОбъект.ЗагрузитьСправочникиОрганизации(ФайлАдрес);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСправочникиОрганизации(Команда)
	ПутьКПапкеОбмена = Объект.ПутьКПапкеОбмена + "\org.xml";
	ФайлДвоичныеДанные = Новый ДвоичныеДанные(ПутьКПапкеОбмена);
	ФайлАдрес = ПоместитьВоВременноеХранилище(ФайлДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
	ЗагрузитьСправочникиОрганизацииНаСервере(ФайлАдрес);
КонецПроцедуры

&НаКлиенте
Процедура ПутьКПапкеОбменаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбора.Заголовок = НСтр("ru = 'Укажите каталог обмена'", "ru");
	ДиалогВыбора.Каталог = Объект.ПутьКПапкеОбмена;
	//ДиалогВыбора.Фильтр = НСтр("ru = 'XML-файлы|*.xml|Все файлы|" + ПолучитьМаскуВсеФайлыКлиента() + "'", "ru");
	Результат = ДиалогВыбора.Выбрать();
	Если Результат Тогда
		Объект.ПутьКПапкеОбмена = ДиалогВыбора.Каталог;
	КонецЕсли;  

КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	Объект.ПутьКПапкеОбмена = ХранилищеНастроекДанныхФорм.Загрузить("ПутьДляОбменаСУтмМастер");
	Объект.ПутьКПапкеУпаковок = ХранилищеНастроекДанныхФорм.Загрузить("ПутьДляЗагрузкеУпаковок");
	Объект.Орг = ХранилищеНастроекДанныхФорм.Загрузить("Орг");   
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	ХранилищеНастроекДанныхФорм.Сохранить("ПутьДляОбменаСУтмМастер",,Объект.ПутьКПапкеОбмена);
	ХранилищеНастроекДанныхФорм.Сохранить("ПутьДляЗагрузкеУпаковок",,Объект.ПутьКПапкеУпаковок);
	ХранилищеНастроекДанныхФорм.Сохранить("Орг",,Объект.Орг);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ПриЗакрытииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСправочникиАПНаСервере(ФайлАдрес)
	пОбъект = РеквизитФормыВЗначение("Объект");
	пОбъект.ЗагрузитьСправочникиАП(ФайлАдрес);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСправочникиАП(Команда)
	ПутьКПапкеОбмена = Объект.ПутьКПапкеОбмена + "\ap.xml";
	ФайлДвоичныеДанные = Новый ДвоичныеДанные(ПутьКПапкеОбмена);
	ФайлАдрес = ПоместитьВоВременноеХранилище(ФайлДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
	ЗагрузитьСправочникиАПНаСервере(ФайлАдрес);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьОтчетОПроизводствеНаСервере(ФайлАдрес)
	ДанныеРезультатовСканированияАлкогольнойПродукции = Новый Структура;
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ДеревоМаркированнойПродукции",             РеквизитФормыВЗначение("ДеревоМаркированнойПродукции"));
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ТаблицаНеМаркируемойПродукции",            РеквизитФормыВЗначение("ТаблицаНеМаркируемойПродукции"));
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ПулНеизвестныхАкцизныхМарок",              РеквизитФормыВЗначение("ПулНеизвестныхАкцизныхМарок"));
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("АлкогольнаяПродукцияКОпределениюСправок2", РеквизитФормыВЗначение("АлкогольнаяПродукцияКОпределениюСправок2"));
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("УпаковкиДокумента",                        УпаковкиДокумента);
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ДобавленныеУпаковки",                      ДобавленныеУпаковки);
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ДоступныеДляПроверкиУпаковки",             ДоступныеДляПроверкиУпаковки);
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("СледующийСтикерОтложено",                  СледующийСтикерОтложено);
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ШтрихкодТекущейПроверяемойУпаковки",       "");
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ДанныеРанееСгенерированныхШтрихкодов",     Неопределено);
	Объект.РузультатПроверкиАП = ДанныеРезультатовСканированияАлкогольнойПродукции;
	пОбъект = РеквизитФормыВЗначение("Объект");
	пОбъект.ЗагрузитьОтчетОПроизводстве(ФайлАдрес); 
	ДанныеРезультатовСканированияАлкогольнойПродукции = "";
	Объект.РузультатПроверкиАП = "";
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОтчетОПроизводстве(Команда)
	ПутьКПапкеОбмена = Объект.ПутьКПапкеОбмена + "\prod.xml";
	ФайлДвоичныеДанные = Новый ДвоичныеДанные(ПутьКПапкеОбмена);
	ФайлАдрес = ПоместитьВоВременноеХранилище(ФайлДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
	ЗагрузитьОтчетОПроизводствеНаСервере(ФайлАдрес);   
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТТНИсходящиеНаСервере()
	ТТНИсходящие.Очистить();
	ТаблТТН = РеквизитФормыВЗначение("ТТНИсходящие");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтатусыДокументовЕГАИС.Документ КАК Ссылка,
				   |	ИСТИНА КАК Пометка,
				   |	СтатусыДокументовЕГАИС.Документ.НомерТТН КАК Номер,
				   |	СтатусыДокументовЕГАИС.Документ.ДатаТТН КАК Дата,
				   |	СтатусыДокументовЕГАИС.Документ.Грузополучатель КАК Грузополучатель,
				   |	СтатусыДокументовЕГАИС.Документ.СуммаДокумента КАК Сумма
	               |ИЗ
	               |	РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	               |ГДЕ
	               |	ВЫРАЗИТЬ(СтатусыДокументовЕГАИС.Документ КАК Документ.ТТНИсходящаяЕГАИС).ДатаТТН >= &ДатаС
	               |	И ВЫРАЗИТЬ(СтатусыДокументовЕГАИС.Документ КАК Документ.ТТНИсходящаяЕГАИС).ДатаТТН <= &ДатаПО
	               |	И СтатусыДокументовЕГАИС.Статус = &Статус
	               |	И ВЫРАЗИТЬ(СтатусыДокументовЕГАИС.Документ КАК Документ.ТТНИсходящаяЕГАИС).Проведен = ИСТИНА";
	
	Запрос.УстановитьПараметр("ДатаС",НачалоДня(ДатаСТТНИсходящая));
	Запрос.УстановитьПараметр("ДатаПо",КонецДня(ДатаПоТТНИсходящая));
	Если ПовторноВыгрузитьИсхТТН Тогда
		Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.Подтвержден);
	Иначе	
		Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.Черновик);
	КонецЕсли;	
	
	ТаблТТН = Запрос.Выполнить().Выгрузить();
	ЗначениеВРеквизитФормы(ТаблТТН,"ТТНИсходящие");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТТНИсходящие(Команда)
	ЗаполнитьТТНИсходящиеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьИсходящиеТТННаСервере(ПолучаемыеФайлы)
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Пометка",Истина);
	СписокДокументов = ТТНИсходящие.Выгрузить(ПараметрыОтбора,"Ссылка");
	пОбъект = РеквизитФормыВЗначение("Объект");
	пОбъект.ВыгрузитьТТНИсходящая(ПолучаемыеФайлы,СписокДокументов);
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьИсходящиеТТН(Команда)
	ПолучаемыеФайлы = Новый Массив;
	ВыгрузитьИсходящиеТТННаСервере(ПолучаемыеФайлы);
	НачатьПолучениеФайлов(Новый ОписаниеОповещения(
	"ЗавершениеПолученияФайловИсходящихТТН",ЭтотОбъект,Параметры),
	ПолучаемыеФайлы,Объект.ПутьКПапкеОбмена + "\OutTTN\", Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеПолученияФайловИсходящихТТН(ПолучаемыеФайлы,Параметры) Экспорт
	ЗавершениеПолученияФайловИсходящихТТНСервер();		
КонецПроцедуры	

&НаСервере
Процедура ЗавершениеПолученияФайловИсходящихТТНСервер()
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Пометка",Истина);
	СписокДокументов = ТТНИсходящие.Выгрузить(ПараметрыОтбора,"Ссылка");
	пОбъект = РеквизитФормыВЗначение("Объект");
	пОбъект.ЗаписатьСтатусВыгруженныхДокументов(СписокДокументов);	
КонецПроцедуры

//Игорь
&НаСервере
Процедура ЗагрузитьОстаткиНаСервере(ФайлАдрес)
	ДанныеРезультатовСканированияАлкогольнойПродукции = Новый Структура;
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ДеревоМаркированнойПродукции",             РеквизитФормыВЗначение("ДеревоМаркированнойПродукции"));
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ТаблицаНеМаркируемойПродукции",            РеквизитФормыВЗначение("ТаблицаНеМаркируемойПродукции"));
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ПулНеизвестныхАкцизныхМарок",              РеквизитФормыВЗначение("ПулНеизвестныхАкцизныхМарок"));
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("АлкогольнаяПродукцияКОпределениюСправок2", РеквизитФормыВЗначение("АлкогольнаяПродукцияКОпределениюСправок2"));
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("УпаковкиДокумента",                        УпаковкиДокумента);
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ДобавленныеУпаковки",                      ДобавленныеУпаковки);
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ДоступныеДляПроверкиУпаковки",             ДоступныеДляПроверкиУпаковки);
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("СледующийСтикерОтложено",                  СледующийСтикерОтложено);
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ШтрихкодТекущейПроверяемойУпаковки",       "");
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ДанныеРанееСгенерированныхШтрихкодов",     Неопределено);
	Объект.РузультатПроверкиАП = ДанныеРезультатовСканированияАлкогольнойПродукции;
	пОбъект = РеквизитФормыВЗначение("Объект");
	пОбъект.ЗагрузитьОстатки(ФайлАдрес, Объект.Орг); 
	ДанныеРезультатовСканированияАлкогольнойПродукции = "";
	Объект.РузультатПроверкиАП = "";
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОстатки(Команда)
	ПутьКПапкеОбмена = Объект.ПутьКПапкеОбмена + "\ost.xml";
	ФайлДвоичныеДанные = Новый ДвоичныеДанные(ПутьКПапкеОбмена);
	ФайлАдрес = ПоместитьВоВременноеХранилище(ФайлДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
	ЗагрузитьОстаткиНаСервере(ФайлАдрес);
КонецПроцедуры

&НаСервере
Функция ВыгрузитьАктСписанияНаСервере(ПолучаемыеФайлы) 	
	пОбъект = РеквизитФормыВЗначение("Объект");
	пОбъект.ВыгрузитьАктСписания(ПолучаемыеФайлы, Объект.АктыСписания);
	
	Возврат ПолучаемыеФайлы; 
КонецФункции
&НаКлиенте
Процедура ВыгрузитьАктСписания(Команда)
	
	ПолучаемыеФайлы = Новый Массив;
	ПолучаемыеФайлы = ВыгрузитьАктСписанияНаСервере(ПолучаемыеФайлы);
	Для Каждого Файл Из ПолучаемыеФайлы Цикл
		НовыйФайл = ПолучитьИзВременногоХранилища(Файл.Хранение);
		НовыйФайл.Записать(Объект.ПутьКПапкеОбмена + "\Акты списания\" + "АктСписания№" + Файл.Имя);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧАктыСписанияНаСервере()	
	ОбъектБД = РеквизитФормыВЗначение("Объект");
	ОбъектБД.ЗаполнитьТЧАктСписания(Объект.ПовторноСписать);
	ЗначениеВРеквизитФормы(ОбъектБД, "Объект");	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТЧАктыСписания(Команда)
	ЗаполнитьТЧАктыСписанияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧАктыПостановкиНаБалансНаСервере()
	ОбъектБД = РеквизитФормыВЗначение("Объект");
	ОбъектБД.ЗаполнитьТЧАктПостановкиНаБаланс(Объект.ПовторноНаБаланс);
	ЗначениеВРеквизитФормы(ОбъектБД, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТЧАктыПостановкиНаБаланс(Команда)
	ЗаполнитьТЧАктыПостановкиНаБалансНаСервере();
КонецПроцедуры

&НаСервере
Функция ВыгрузитьАктПостановкиНаБалансНаСервере(ПолучаемыеФайлы)
	пОбъект = РеквизитФормыВЗначение("Объект");
	пОбъект.ВыгрузитьАктПостановкиНаБаланс(ПолучаемыеФайлы, Объект.АктыПостановкиНаБаланс);
	
	Возврат ПолучаемыеФайлы;
КонецФункции

&НаКлиенте
Процедура ВыгрузитьАктПостановкиНаБаланс(Команда)
	ПолучаемыеФайлы = Новый Массив;
	ПолучаемыеФайлы = ВыгрузитьАктПостановкиНаБалансНаСервере(ПолучаемыеФайлы);
	Для Каждого Файл Из ПолучаемыеФайлы Цикл
		НовыйФайл = ПолучитьИзВременногоХранилища(Файл.Хранение);
		НовыйФайл.Записать(Объект.ПутьКПапкеОбмена + "\Акты списания\" + "АктПостановкиНаБаланс№" + Файл.Имя);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсеНаСервере(ТЧ)
	
	Для каждого а Из ТЧ Цикл
		а.Загружать = истина;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура СнятьВыделениеНаСервере(ТЧ)
	
	Для каждого а Из ТЧ Цикл
		а.Загружать = Ложь;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсеНаБланс(Команда)
	ОтметитьВсеНаСервере(Объект.АктыПостановкиНаБаланс);
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсеСписание(Команда)
	ОтметитьВсеНаСервере(Объект.АктыСписания);
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеНаБаланс(Команда)
	СнятьВыделениеНаСервере(Объект.АктыПостановкиНаБаланс)	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеНаСписание(Команда)
	СнятьВыделениеНаСервере(Объект.АктыСписания)	
КонецПроцедуры


&НаСервере
Процедура ЗагрузитьДиапазоныНаСервере(ФайлАдрес)
	пОбъект = РеквизитФормыВЗначение("Объект");
	пОбъект.ЗагрузитьДиапазоны(ФайлАдрес);	
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьДиапазоны(Команда)
	ПутьКПапкеОбмена = Объект.ПутьКПапкеОбмена + "\Upload.xml";
	ФайлДвоичныеДанные = Новый ДвоичныеДанные(ПутьКПапкеОбмена);
	ЗагрузитьДиапазоныНаСервере(ФайлДвоичныеДанные);
КонецПроцедуры


&НаКлиенте
Процедура ПутьКПапкеУпаковокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбора.Заголовок = НСтр("ru = 'Укажите каталог упаковок'", "ru");
	ДиалогВыбора.Каталог = Объект.ПутьКПапкеУпаковок;
	//ДиалогВыбора.Фильтр = НСтр("ru = 'XML-файлы|*.xml|Все файлы|" + ПолучитьМаскуВсеФайлыКлиента() + "'", "ru");
	Результат = ДиалогВыбора.Выбрать();
	Если Результат Тогда
		Объект.ПутьКПапкеУпаковок = ДиалогВыбора.Каталог;
	КонецЕсли;  

КонецПроцедуры


&НаСервере
Процедура ЗагрузитьУпаковкиНаСервере(ФайлАдрес)
	пОбъект = РеквизитФормыВЗначение("Объект");
	пОбъект.ЗагрузитьИСоздатьУпаковки(ФайлАдрес); 
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьУпаковки(Команда)
	ПутьКПапкеОбмена = Объект.ПутьКПапкеУпаковок + "\Packing.xml";
	ФайлДвоичныеДанные = Новый ДвоичныеДанные(ПутьКПапкеОбмена);
	ФайлАдрес = ПоместитьВоВременноеХранилище(ФайлДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
	ЗагрузитьУпаковкиНаСервере(ФайлАдрес);   
КонецПроцедуры


&НаСервере
Процедура ЗагрузитьПеремещениеНаСервере(ФайлАдрес)
	ДанныеРезультатовСканированияАлкогольнойПродукции = Новый Структура;
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ДеревоМаркированнойПродукции",             РеквизитФормыВЗначение("ДеревоМаркированнойПродукции"));
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ТаблицаНеМаркируемойПродукции",            РеквизитФормыВЗначение("ТаблицаНеМаркируемойПродукции"));
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ПулНеизвестныхАкцизныхМарок",              РеквизитФормыВЗначение("ПулНеизвестныхАкцизныхМарок"));
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("АлкогольнаяПродукцияКОпределениюСправок2", РеквизитФормыВЗначение("АлкогольнаяПродукцияКОпределениюСправок2"));
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("УпаковкиДокумента",                        УпаковкиДокумента);
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ДобавленныеУпаковки",                      ДобавленныеУпаковки);
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ДоступныеДляПроверкиУпаковки",             ДоступныеДляПроверкиУпаковки);
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("СледующийСтикерОтложено",                  СледующийСтикерОтложено);
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ШтрихкодТекущейПроверяемойУпаковки",       "");
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ДанныеРанееСгенерированныхШтрихкодов",     Неопределено);
	Объект.РузультатПроверкиАП = ДанныеРезультатовСканированияАлкогольнойПродукции;
	пОбъект = РеквизитФормыВЗначение("Объект");
	пОбъект.ЗагрузитьПеремещение(ФайлАдрес); 
	ДанныеРезультатовСканированияАлкогольнойПродукции = "";
	Объект.РузультатПроверкиАП = "";		
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьПеремещение(Команда)
	ПутьКПапкеОбмена = Объект.ПутьКПапкеОбмена + "\perem.xml";
	ФайлДвоичныеДанные = Новый ДвоичныеДанные(ПутьКПапкеОбмена);
	ФайлАдрес = ПоместитьВоВременноеХранилище(ФайлДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
	ЗагрузитьПеремещениеНаСервере(ФайлАдрес);  
КонецПроцедуры


&НаСервере
Процедура ЗагрузитьАктПостановкиНаСервере(ФайлАдрес)
	ДанныеРезультатовСканированияАлкогольнойПродукции = Новый Структура;
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ДеревоМаркированнойПродукции",             РеквизитФормыВЗначение("ДеревоМаркированнойПродукции"));
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ТаблицаНеМаркируемойПродукции",            РеквизитФормыВЗначение("ТаблицаНеМаркируемойПродукции"));
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ПулНеизвестныхАкцизныхМарок",              РеквизитФормыВЗначение("ПулНеизвестныхАкцизныхМарок"));
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("АлкогольнаяПродукцияКОпределениюСправок2", РеквизитФормыВЗначение("АлкогольнаяПродукцияКОпределениюСправок2"));
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("УпаковкиДокумента",                        УпаковкиДокумента);
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ДобавленныеУпаковки",                      ДобавленныеУпаковки);
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ДоступныеДляПроверкиУпаковки",             ДоступныеДляПроверкиУпаковки);
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("СледующийСтикерОтложено",                  СледующийСтикерОтложено);
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ШтрихкодТекущейПроверяемойУпаковки",       "");
	ДанныеРезультатовСканированияАлкогольнойПродукции.Вставить("ДанныеРанееСгенерированныхШтрихкодов",     Неопределено);
	Объект.РузультатПроверкиАП = ДанныеРезультатовСканированияАлкогольнойПродукции;
	пОбъект = РеквизитФормыВЗначение("Объект");
	пОбъект.ЗагрузитьАктПостановки(ФайлАдрес); 
	ДанныеРезультатовСканированияАлкогольнойПродукции = "";
	Объект.РузультатПроверкиАП = "";
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьАктПостановки(Команда)
	ПутьКПапкеОбмена = Объект.ПутьКПапкеОбмена + "\post.xml";
	ФайлДвоичныеДанные = Новый ДвоичныеДанные(ПутьКПапкеОбмена);
	ФайлАдрес = ПоместитьВоВременноеХранилище(ФайлДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
	ЗагрузитьАктПостановкиНаСервере(ФайлАдрес);
КонецПроцедуры
	